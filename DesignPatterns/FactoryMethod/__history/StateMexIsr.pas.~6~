{***********************************************************}
{                                                           }
{    unit IsrDur                                            }
{    Calculates the ISR according to the                    }
{    laws in Durango, Mexico                                }
{                                                           }
{    Copyright (c) 1986,2023 Microsip                       }
{                                                           }
{***********************************************************}
unit StateMexIsr;

interface
uses InEdoMex, FactoryEdoMexIsr;
type
  /// <summary>
  ///   Represents the different states in Mexico.
  ///   Is the context on the design pattern strategy
  /// </summary>
  TStateMexIsr = class(TObject)

  private
    //FEdoMex : IEdoMex;
    FEdoMexStr : String;
    FFactory : TEdoMexIsrFactory;
    procedure SetEdoMex(ANombreEdoMex: String);
  public
    constructor Create(AFactory : TEdoMexIsrFactory);
    property edoMex : String read FEdoMexStr write SetEdoMex;
    {function CalcularEdoMexIsr(ANombreEdoMex: String; AnAmmount: Double): Double;}
    function CalcularEdoMexIsr(AnAmmount: Double): Double;
  end;

implementation
constructor TStateMexIsr.Create(AFactory: TEdoMexIsrFactory);
begin
  FFactory := AFactory;
end;

procedure TStateMexIsr.SetEdoMex(ANombreEdoMex: String);
begin
  FEdoMexStr := ANombreEdoMex;
end;

function TStateMexIsr.CalcularEdoMexIsr(AnAmmount: Double): Double;
var lEdoMex : IEdoMex;
begin
  lEdoMex := FFactory.CrearEdoMex(FEdoMexStr);
  Result := lEdoMex.CalcularIsr(AnAmmount);
end;

{function TStateMexIsr.CalcularEdoMexIsr(ANombreEdoMex: String; AnAmmount: Double): Double;
  begin
    FEdoMex := FFactory.CrearEdoMex(ANombreEdoMex);
    Result := FEdoMex.CalcularIsr(AnAmmount);
  end;}
end.
