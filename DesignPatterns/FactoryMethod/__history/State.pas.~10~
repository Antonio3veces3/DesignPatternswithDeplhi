{***********************************************************}
{                                                           }
{    unit IsrDur                                            }
{    Calculates the ISR according to the                    }
{    laws in Durango, Mexico                                }
{                                                           }
{    Copyright (c) 1986,2023 Microsip                       }
{                                                           }
{***********************************************************}
unit State;

interface
uses ICalculatorIsr, InEdoMex, FactoryEdoMex;
type
  /// <summary>
  ///   Represents the different states in Mexico.
  ///   Is the context on the design pattern strategy
  /// </summary>
  TStateMexIsr= class(TObject)

  private
    // Create reference to the Strategy
    // With this reference we can access to the different wayt to calculate ISR
    FIsrCalculator: IIsrCalculator;
    FEdoMex : IEdoMex;
    FFactory : TEdoMexIsrFactory;
  public
    function Calculate(AnAmmount: Double): Double;
    procedure setState(AState: IIsrCalculator);
  end;

implementation
function TStateMexIsr.Calculate(AnAmmount: Double): Double;
  begin
    // Calls the method calculate through the interface.
   Result:= FIsrCalculator.Calculate(AnAmmount);
  end;

procedure TStateMexIsr.setState(AState: IIsrCalculator);
  begin
    // update the state selected
    FIsrCalculator:= AState;
  end;
end.
